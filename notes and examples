# this is the stored info from html get request stored in variable
html_info= "<!DOCTYPE html>\
            <html>\
            <head>\
            <title>Page Title</title>\
            </head>\
            <body>\
            <h3><b id='boldest'>Lebron James</b></h3>\
            <p> Salary: $ 92,000,000 </p>\
            <h3> Stephen Curry</h3>\
            <p> Salary: $85,000, 000 </p>\
            <h3> Kevin Durant </h3>\
            <p> Salary: $73,200, 000</p>\
            </body>\
            </html>"

# next create a beautiful soup object  which represents the document as a nested data structure
soup = BeautifulSoup(html_info, "html.parser")

#First, the document is converted to Unicode, (similar to ASCII), \
# and HTML entities are converted to Unicode characters. Beautiful Soup transforms a complex HTML document
# into a complex tree of Python objects. The BeautifulSoup object can create other types of objects.
#We can use the method prettify() to display the HTML in the nested structure:

print(soup.prettify())
#we can use the tag object- corresponds to the HTML tag in original doc ;example:
tag_object=soup.title
print("tag object:",tag_object)
#prints title



url="http://www.ibm.com"
data = requests.get(url).text
soup= BeautifulSoup(data, "html.parser")

#scrape all links from the page
#for link in soup.find_all('a', href=True):
    #print(link.get('href'))

#scrape all image tags
#for link in soup.find_all('img'):  # in html image is represented by the tag <img>
 #   print(link)
  #  print(link.get('src'))

#scrape data from HTML tables, this is a website about color codes
urlColor = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DA0321EN-\
SkillsNetwork/labs/datasets/HTMLColorCodes.html"

#get contents and save as test
dataColor = requests.get(urlColor).text
#good soup
soupColor = BeautifulSoup(dataColor, "html.parser")

#find html table in web page
table = soupColor.find('table')

#Get all rows from the table
for row in table.find_all('tr'): # in html table row is represented by the tag <tr>
    # Get all columns in each row.
    cols = row.find_all('td') # in html a column is represented by the tag <td>
    color_name = cols[2].string # store the value in column 3 as color_name
    color_code = cols[3].string # store the value in column 4 as color_code
    print("{}--->{}".format(color_name,color_code))
